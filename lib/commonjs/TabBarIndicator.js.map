{"version":3,"sources":["TabBarIndicator.tsx"],"names":["Easing","EasingNode","OldEasing","multiply","Extrapolate","Animated","interpolate","interpolateNode","TabBarIndicator","React","Component","navigationState","layout","width","getTabWidth","props","isIndicatorShown","routes","every","_","i","timing","opacity","duration","toValue","easing","in","linear","start","Value","position","inputRange","map","outputRange","reduce","acc","translateX","extrapolate","CLAMP","I18nManager","isRTL","componentDidMount","fadeInIndicator","componentDidUpdate","render","style","length","getTranslateX","indicatorWidth","getWidth","styles","indicator","transform","left","index","StyleSheet","create","backgroundColor","bottom","right","height"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { StyleSheet, I18nManager, StyleProp, ViewStyle } from 'react-native';\r\nimport Animated, {\r\n  Easing as OldEasing,\r\n  // @ts-ignore\r\n  EasingNode,\r\n} from 'react-native-reanimated';\r\n\r\nimport memoize from './memoize';\r\nimport { Route, SceneRendererProps, NavigationState } from './types';\r\n\r\nconst Easing = EasingNode || OldEasing;\r\n\r\nexport type GetTabWidth = (index: number) => number;\r\n\r\nexport type Props<T extends Route> = SceneRendererProps & {\r\n  navigationState: NavigationState<T>;\r\n  width: string | number;\r\n  style?: StyleProp<ViewStyle>;\r\n  getTabWidth: GetTabWidth;\r\n};\r\n\r\nconst { multiply, Extrapolate } = Animated;\r\n\r\n// @ts-ignore\r\nconst interpolate = Animated.interpolateNode || Animated.interpolate;\r\n\r\nexport default class TabBarIndicator<T extends Route> extends React.Component<\r\n  Props<T>\r\n> {\r\n  componentDidMount() {\r\n    this.fadeInIndicator();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.fadeInIndicator();\r\n  }\r\n\r\n  private fadeInIndicator = () => {\r\n    const { navigationState, layout, width, getTabWidth } = this.props;\r\n\r\n    if (\r\n      !this.isIndicatorShown &&\r\n      width === 'auto' &&\r\n      layout.width &&\r\n      // We should fade-in the indicator when we have widths for all the tab items\r\n      navigationState.routes.every((_, i) => getTabWidth(i))\r\n    ) {\r\n      this.isIndicatorShown = true;\r\n\r\n      Animated.timing(this.opacity, {\r\n        duration: 150,\r\n        toValue: 1,\r\n        easing: Easing.in(Easing.linear),\r\n      }).start();\r\n    }\r\n  };\r\n\r\n  private isIndicatorShown = false;\r\n\r\n  private opacity = new Animated.Value(this.props.width === 'auto' ? 0 : 1);\r\n\r\n  private getTranslateX = memoize(\r\n    (\r\n      position: Animated.Node<number>,\r\n      routes: Route[],\r\n      getTabWidth: GetTabWidth\r\n    ) => {\r\n      const inputRange = routes.map((_, i) => i);\r\n\r\n      // every index contains widths at all previous indices\r\n      const outputRange = routes.reduce<number[]>((acc, _, i) => {\r\n        if (i === 0) return [0];\r\n        return [...acc, acc[i - 1] + getTabWidth(i - 1)];\r\n      }, []);\r\n\r\n      const translateX = interpolate(position, {\r\n        inputRange,\r\n        outputRange,\r\n        extrapolate: Extrapolate.CLAMP,\r\n      });\r\n\r\n      return multiply(translateX, I18nManager.isRTL ? -1 : 1);\r\n    }\r\n  );\r\n\r\n  private getWidth = memoize(\r\n    (\r\n      position: Animated.Node<number>,\r\n      routes: Route[],\r\n      getTabWidth: GetTabWidth\r\n    ) => {\r\n      const inputRange = routes.map((_, i) => i);\r\n      const outputRange = inputRange.map(getTabWidth);\r\n\r\n      return interpolate(position, {\r\n        inputRange,\r\n        outputRange,\r\n        extrapolate: Extrapolate.CLAMP,\r\n      });\r\n    }\r\n  );\r\n\r\n  render() {\r\n    const {\r\n      position,\r\n      navigationState,\r\n      getTabWidth,\r\n      width,\r\n      style,\r\n      layout,\r\n    } = this.props;\r\n    const { routes } = navigationState;\r\n\r\n    const translateX =\r\n      routes.length > 1 ? this.getTranslateX(position, routes, getTabWidth) : 0;\r\n\r\n    const indicatorWidth =\r\n      width === 'auto'\r\n        ? routes.length > 1\r\n          ? this.getWidth(position, routes, getTabWidth)\r\n          : getTabWidth(0)\r\n        : width;\r\n\r\n    return (\r\n      <Animated.View\r\n        style={[\r\n          styles.indicator,\r\n          // If layout is not available, use `left` property for positioning the indicator\r\n          // This avoids rendering delay until we are able to calculate translateX\r\n          { width: indicatorWidth },\r\n          layout.width\r\n            ? { transform: [{ translateX }] as any }\r\n            : { left: `${(100 / routes.length) * navigationState.index}%` },\r\n          width === 'auto' ? { opacity: this.opacity } : null,\r\n          style,\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  indicator: {\r\n    backgroundColor: '#ffeb3b',\r\n    position: 'absolute',\r\n    left: 0,\r\n    bottom: 0,\r\n    right: 0,\r\n    height: 2,\r\n  },\r\n});\r\n"]}