{"version":3,"sources":["TabBarItem.tsx"],"names":["React","StyleSheet","View","TouchableItem","Animated","memoize","AnimatedInterpolate","interpolateNode","interpolate","DEFAULT_ACTIVE_COLOR","DEFAULT_INACTIVE_COLOR","TabBarItem","Component","position","routes","tabIndex","length","inputRange","map","_","i","outputRange","render","route","navigationState","renderLabel","renderLabelPassed","renderIcon","renderBadge","getLabelText","getTestID","getAccessibilityLabel","getAccessible","activeColor","inactiveColor","pressColor","pressOpacity","labelStyle","style","onLayout","onPress","onLongPress","props","indexOf","isFocused","index","activeOpacity","getActiveOpacity","inactiveOpacity","getInactiveOpacity","icon","label","activeIcon","focused","color","inactiveIcon","styles","opacity","absoluteFill","undefined","labelText","marginTop","activeLabel","inactiveLabel","tabStyle","flatten","isWidthSet","width","tabContainerStyle","flex","scene","accessibilityLabel","badge","selected","item","create","margin","backgroundColor","alignItems","justifyContent","padding","minHeight","top","right"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  StyleProp,\r\n  LayoutChangeEvent,\r\n  TextStyle,\r\n  ViewStyle,\r\n} from 'react-native';\r\nimport TouchableItem from './TouchableItem';\r\nimport { Scene, Route, NavigationState } from './types';\r\nimport Animated from 'react-native-reanimated';\r\nimport memoize from './memoize';\r\n\r\n// @ts-ignore\r\nconst AnimatedInterpolate = Animated.interpolateNode || Animated.interpolate;\r\n\r\nexport type Props<T extends Route> = {\r\n  position: Animated.Node<number>;\r\n  route: T;\r\n  navigationState: NavigationState<T>;\r\n  activeColor?: string;\r\n  inactiveColor?: string;\r\n  pressColor?: string;\r\n  pressOpacity?: number;\r\n  getLabelText: (scene: Scene<T>) => string | undefined;\r\n  getAccessible: (scene: Scene<T>) => boolean | undefined;\r\n  getAccessibilityLabel: (scene: Scene<T>) => string | undefined;\r\n  getTestID: (scene: Scene<T>) => string | undefined;\r\n  renderLabel?: (scene: {\r\n    route: T;\r\n    focused: boolean;\r\n    color: string;\r\n  }) => React.ReactNode;\r\n  renderIcon?: (scene: {\r\n    route: T;\r\n    focused: boolean;\r\n    color: string;\r\n  }) => React.ReactNode;\r\n  renderBadge?: (scene: Scene<T>) => React.ReactNode;\r\n  onLayout?: (event: LayoutChangeEvent) => void;\r\n  onPress: () => void;\r\n  onLongPress: () => void;\r\n  labelStyle?: StyleProp<TextStyle>;\r\n  style: StyleProp<ViewStyle>;\r\n};\r\n\r\nconst DEFAULT_ACTIVE_COLOR = 'rgba(255, 255, 255, 1)';\r\nconst DEFAULT_INACTIVE_COLOR = 'rgba(255, 255, 255, 0.7)';\r\n\r\nexport default class TabBarItem<T extends Route> extends React.Component<\r\n  Props<T>\r\n> {\r\n  private getActiveOpacity = memoize(\r\n    (position: Animated.Node<number>, routes: Route[], tabIndex: number) => {\r\n      if (routes.length > 1) {\r\n        const inputRange = routes.map((_, i) => i);\r\n\r\n        return AnimatedInterpolate(position, {\r\n          inputRange,\r\n          outputRange: inputRange.map((i) => (i === tabIndex ? 1 : 0)),\r\n        });\r\n      } else {\r\n        return 1;\r\n      }\r\n    }\r\n  );\r\n\r\n  private getInactiveOpacity = memoize((position, routes, tabIndex) => {\r\n    if (routes.length > 1) {\r\n      const inputRange = routes.map((_: Route, i: number) => i);\r\n\r\n      return AnimatedInterpolate(position, {\r\n        inputRange,\r\n        outputRange: inputRange.map((i: number) => (i === tabIndex ? 0 : 1)),\r\n      });\r\n    } else {\r\n      return 0;\r\n    }\r\n  });\r\n\r\n  render() {\r\n    const {\r\n      route,\r\n      position,\r\n      navigationState,\r\n      renderLabel: renderLabelPassed,\r\n      renderIcon,\r\n      renderBadge,\r\n      getLabelText,\r\n      getTestID,\r\n      getAccessibilityLabel,\r\n      getAccessible,\r\n      activeColor = DEFAULT_ACTIVE_COLOR,\r\n      inactiveColor = DEFAULT_INACTIVE_COLOR,\r\n      pressColor,\r\n      pressOpacity,\r\n      labelStyle,\r\n      style,\r\n      onLayout,\r\n      onPress,\r\n      onLongPress,\r\n    } = this.props;\r\n\r\n    const tabIndex = navigationState.routes.indexOf(route);\r\n    const isFocused = navigationState.index === tabIndex;\r\n\r\n    const activeOpacity = this.getActiveOpacity(\r\n      position,\r\n      navigationState.routes,\r\n      tabIndex\r\n    );\r\n    const inactiveOpacity = this.getInactiveOpacity(\r\n      position,\r\n      navigationState.routes,\r\n      tabIndex\r\n    );\r\n\r\n    let icon: React.ReactNode | null = null;\r\n    let label: React.ReactNode | null = null;\r\n\r\n    if (renderIcon) {\r\n      const activeIcon = renderIcon({\r\n        route,\r\n        focused: true,\r\n        color: activeColor,\r\n      });\r\n      const inactiveIcon = renderIcon({\r\n        route,\r\n        focused: false,\r\n        color: inactiveColor,\r\n      });\r\n\r\n      if (inactiveIcon != null && activeIcon != null) {\r\n        icon = (\r\n          <View style={styles.icon}>\r\n            <Animated.View style={{ opacity: inactiveOpacity }}>\r\n              {inactiveIcon}\r\n            </Animated.View>\r\n            <Animated.View\r\n              style={[StyleSheet.absoluteFill, { opacity: activeOpacity }]}\r\n            >\r\n              {activeIcon}\r\n            </Animated.View>\r\n          </View>\r\n        );\r\n      }\r\n    }\r\n\r\n    const renderLabel =\r\n      renderLabelPassed !== undefined\r\n        ? renderLabelPassed\r\n        : ({ route, color }: { route: T; color: string }) => {\r\n            const labelText = getLabelText({ route });\r\n\r\n            if (typeof labelText === 'string') {\r\n              return (\r\n                <Animated.Text\r\n                  style={[\r\n                    styles.label,\r\n                    icon ? { marginTop: 0 } : null,\r\n                    { color },\r\n                    labelStyle,\r\n                  ]}\r\n                >\r\n                  {labelText}\r\n                </Animated.Text>\r\n              );\r\n            }\r\n\r\n            return labelText;\r\n          };\r\n\r\n    if (renderLabel) {\r\n      const activeLabel = renderLabel({\r\n        route,\r\n        focused: true,\r\n        color: activeColor,\r\n      });\r\n      const inactiveLabel = renderLabel({\r\n        route,\r\n        focused: false,\r\n        color: inactiveColor,\r\n      });\r\n\r\n      label = (\r\n        <View>\r\n          <Animated.View style={{ opacity: inactiveOpacity }}>\r\n            {inactiveLabel}\r\n          </Animated.View>\r\n          <Animated.View\r\n            style={[StyleSheet.absoluteFill, { opacity: activeOpacity }]}\r\n          >\r\n            {activeLabel}\r\n          </Animated.View>\r\n        </View>\r\n      );\r\n    }\r\n\r\n    const tabStyle = StyleSheet.flatten(style);\r\n    const isWidthSet = tabStyle?.width !== undefined;\r\n    const tabContainerStyle: ViewStyle | null = isWidthSet ? null : { flex: 1 };\r\n\r\n    const scene = { route };\r\n\r\n    let accessibilityLabel = getAccessibilityLabel(scene);\r\n\r\n    accessibilityLabel =\r\n      typeof accessibilityLabel !== 'undefined'\r\n        ? accessibilityLabel\r\n        : getLabelText(scene);\r\n\r\n    const badge = renderBadge ? renderBadge(scene) : null;\r\n\r\n    return (\r\n      <TouchableItem\r\n        borderless\r\n        testID={getTestID(scene)}\r\n        accessible={getAccessible(scene)}\r\n        accessibilityLabel={accessibilityLabel}\r\n        accessibilityTraits={isFocused ? ['button', 'selected'] : 'button'}\r\n        accessibilityComponentType=\"button\"\r\n        accessibilityRole=\"tab\"\r\n        accessibilityState={{ selected: isFocused }}\r\n        // @ts-ignore: this is to support older React Native versions\r\n        accessibilityStates={isFocused ? ['selected'] : []}\r\n        pressColor={pressColor}\r\n        pressOpacity={pressOpacity}\r\n        delayPressIn={0}\r\n        onLayout={onLayout}\r\n        onPress={onPress}\r\n        onLongPress={onLongPress}\r\n        style={tabContainerStyle}\r\n      >\r\n        <View pointerEvents=\"none\" style={[styles.item, tabStyle]}>\r\n          {icon}\r\n          {label}\r\n          {badge != null ? <View style={styles.badge}>{badge}</View> : null}\r\n        </View>\r\n      </TouchableItem>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  label: {\r\n    margin: 4,\r\n    backgroundColor: 'transparent',\r\n  },\r\n  icon: {\r\n    margin: 2,\r\n  },\r\n  item: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 10,\r\n    minHeight: 48,\r\n  },\r\n  badge: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    right: 0,\r\n  },\r\n});\r\n"]}